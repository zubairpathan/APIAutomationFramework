TestCaseID,Title,Objective,Preconditions,Steps,ExpectedResult,Priority,Endpoint,Method,RequestExample,TestDataFile,Notes
TC-001,Get all objects returns list,Verify GET /objects returns an array of objects,API is reachable,"1. Send GET /objects, 2. Inspect HTTP status and response body.",200 OK; response is a JSON array; at least 13 items present,High,/objects,GET,-,testdata/objects/*.json,Tolerant parsing: numeric and string mixes in 'data'
TC-002,Get single object by id,Verify GET /objects/{id} returns the item,Object with id exists,"1. Send GET /objects/7, 2. Inspect status and JSON body",200 OK; JSON object with id '7' and expected fields,High,/objects/7,GET,-,-,Use id '7' as known sample from dataset
TC-003,Get objects by multiple ids,Verify GET /objects?id=3&id=5&id=10 returns exactly those items,"Objects 3,5,10 exist","1. Send GET /objects?id=3&id=5&id=10, 2. Inspect response",200 OK; JSON array with exactly the 3 requested objects,Medium,/objects?id=3&id=5&id=10,GET,-,-,Assert each object's id/name/data
TC-004,Post create new object (happy path),Verify POST /objects creates an object and returns generated id,API is reachable; payload valid,"1. Prepare JSON body from testdata/create_object.json, 2. POST /objects with body, 3. Inspect status and response",200 OK; response contains generated non-empty 'id'; fields match input where applicable,High,/objects,POST,See testdata/objects/create_object.json,testdata/objects/create_object.json,Verify createdAt is present and parseable
TC-005,Post create with missing required field,Verify POST rejects payload missing required name,API reachable,"1. Modify create payload removing 'name', 2. POST /objects, 3. Inspect status",400 Bad Request (or 422); error message indicating missing 'name',Medium,/objects,POST,Partial body without 'name',-,Validate schema and error message
TC-006,Put update object (full replace),Verify PUT /objects/{id} replaces object when id exists,Object created previously (create first),"1. POST to create object and capture id, 2. Prepare full replacement body, 3. PUT /objects/{id}, 4. Inspect status and (if provided) response or GET",200 OK; object fields updated to new values; GET returns updated object,High,/objects/{id},PUT,Full object JSON,-,"If PUT returns 405, record and investigate API constraints"
TC-007,Patch update object (partial update),Verify PATCH /objects/{id} updates given fields only,Object created first to obtain id,"1. POST to create object and capture id, 2. PATCH /objects/{id} with partial payload (e.g., name), 3. Verify via response body OR GET list","200 OK; updated field changed, other fields unchanged",High,/objects/{id},PATCH,Partial JSON (update_name.json),testdata/objects/update_name.json,Handle APIs that return empty body on PATCH: fallback to GET list
TC-008,Delete object,Verify DELETE /objects/{id} removes the object,Object created first,"1. POST to create object and capture id, 2. DELETE /objects/{id}, 3. GET /objects/{id} or GET /objects and confirm removal",200 OK (or 204); subsequent GET returns 404 or object absent in list,High,/objects/{id},DELETE,-,-,Consider id reuse policy and soft-delete behavior
TC-009,Update reserved id (negative),"Verify updating reserved id (e.g., id=7) is rejected",API reachable,"1. Attempt PATCH /objects/7 or PUT /objects/7 with valid body, 2. Inspect status & error",405 Method Not Allowed or specific error with message about reserved id,High,/objects/7,PATCH/PUT,Valid payload,-,Known API behavior: id '7' reserved
TC-010,Post malformed JSON (negative),Server returns 400 on malformed JSON,API reachable,"1. Send POST /objects with invalid JSON (trailing comma), 2. Inspect status",400 Bad Request; error message or parse error,Medium,/objects,POST,Malformed JSON,-,Verify server error handling
TC-011,Authentication/Authorization,Verify API requires auth when applicable,"If API supports auth, obtain token","1. Call endpoints without auth, 2. Call with invalid token",401/403 responses when unauthorized,High,/objects,GET/POST/...,-,-,"If API is public, mark as NA"
TC-012,Large payload and performance,Verify server handles large payloads and responds within SLA,API reachable,"1. POST object with very large 'data' field, 2. Measure response time and status","200 OK; response within acceptable time (e.g., < 2s); no truncation",Low,/objects,POST,Large JSON,-,Record timings and observe server errors
TC-013,Concurrent updates,Verify concurrent PATCH/PUT calls handle conflicts or last-write-wins,Object created first,"1. Create object, 2. Issue two concurrent PATCH/PUT with different values, 3. GET final state",Either one update wins in deterministic manner or conflict error returned,Medium,/objects/{id},PATCH/PUT,Concurrent payloads,-,Record timestamps and API conflict response behavior
TC-014,Id not found (404),Verify 404 returned for non-existent id,No object with id 999999,"1. GET/PUT/PATCH/DELETE /objects/999999, 2. Inspect status",404 Not Found,High,/objects/999999,GET/PUT/PATCH/DELETE,-,-,Assert error message format
TC-015,Input validation: numeric fields as strings,Verify numeric fields accept strings where documented,API reachable,"1. Submit body with numeric fields as strings (e.g., ""price"": ""1849.99""), 2. Inspect response",Server accepts and stores values; GET returns numeric or string consistent with API,Medium,/objects,POST/PUT,JSON with numeric-as-string,-,Tests tolerant number handling in parsing
